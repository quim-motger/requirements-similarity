swagger: '2.0'
info:
  description: |-

    The Requirements Similarity system is a Java-based web service deployed as a REST API that allows software engineers to test and evaluate similarity algorithms between requirement items in a software engineering (SE) project.
  version: 1.0.0
  title: Requirements Similarity detection tool
  contact:
    name: jmotger@uoc.edu
  license:
    name: 'APACHE LICENSE, VERSION 2.0'
    url: 'https://www.apache.org/licenses/LICENSE-2.0.txt'
host: 'localhost:9000'
basePath: /
tags:
  - name: bm-25-f-controller
    description: BM 25 F Controller
  - name: fesvm-controller
    description: FESVM Controller
  - name: requirement-controller
    description: Requirement Controller
paths:
  /requirements-similarity/bm25f/req:
    post:
      tags:
        - bm-25-f-controller
      summary: Find duplicates of a requirement
      description: 'Given a requirement, the BM25F algorithm is run against a set of requirements, and the list of the top *k* most similar requirements is returned.'
      operationId: bm25fReqUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: k
          in: query
          description: The number of most similar duplicates to return
          required: true
          type: integer
          format: int32
          allowEmptyValue: false
        - name: projectList
          in: query
          description: 'The list of projects to use as corpus. If empty, all projects are used'
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          allowEmptyValue: false
        - in: body
          name: schema
          description: The requirement to be analyzed
          required: true
          schema:
            $ref: '#/definitions/OpenReqSchema'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OpenReqSchema'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /requirements-similarity/bm25f/reqReq:
    post:
      tags:
        - bm-25-f-controller
      summary: Compare two requirements
      description: 'Given a pair of requirements, the similarity score is returned.'
      operationId: bm25fReqReqUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: projectList
          in: query
          description: 'The list of projects to use as corpus. If empty, all projects are used'
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          allowEmptyValue: false
        - in: body
          name: schema
          description: The requirement to be analyzed
          required: true
          schema:
            $ref: '#/definitions/OpenReqSchema'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OpenReqSchema'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /requirements-similarity/bm25f/test:
    post:
      tags:
        - bm-25-f-controller
      summary: recall-rate@k
      description: 'Given a set of requirements and a set of known duplicates, a recall-rate@k analysis is performed'
      operationId: bm25fTestUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: k
          in: query
          description: The number of most similar duplicates to return
          required: true
          type: integer
          format: int32
          allowEmptyValue: false
        - name: projectList
          in: query
          description: 'The list of projects to use as corpus. If empty, all projects are used'
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          allowEmptyValue: false
        - in: body
          name: schema
          description: The set of duplicated pairs
          required: true
          schema:
            $ref: '#/definitions/OpenReqSchema'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: number
              format: double
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /requirements-similarity/bm25f/train:
    post:
      tags:
        - bm-25-f-controller
      summary: Optimize free parameters
      description: 'Given a set of duplicated requirement pairs, a tuning process is run to optimize the weights of the features of the algorithms.'
      operationId: bm25fTrainUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: projectList
          in: query
          description: 'The list of projects to use as corpus. If empty, all projects are used'
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          allowEmptyValue: false
        - in: body
          name: schema
          description: The set of duplicated pairs
          required: true
          schema:
            $ref: '#/definitions/OpenReqSchema'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /requirements-similarity/fe-svm/test:
    post:
      tags:
        - fesvm-controller
      summary: Predict
      description: 'Given a set of not-labelled pairs of requirements, the system predicts their classification using the trained SVM classifier'
      operationId: FESVMTestUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: schema
          description: The pair dataset for training
          required: true
          schema:
            $ref: '#/definitions/OpenReqSchema'
        - name: withLexicalFeatures
          in: query
          description: 'If *true*, lexical features are used'
          required: false
          type: boolean
          default: true
          allowEmptyValue: false
        - name: withSyntacticFeatures
          in: query
          description: 'If *true*, syntactic features are used'
          required: false
          type: boolean
          default: true
          allowEmptyValue: false
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OpenReqSchema'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /requirements-similarity/fe-svm/train:
    post:
      tags:
        - fesvm-controller
      summary: Train a SVM model
      description: 'Given a set of labelled duplicate and not-duplicate pairs of requirements, the system trains a SVM classifier with the defined configuration parameters.'
      operationId: FESVMTrainUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: C
          in: query
          description: The value of the *C* parameter
          required: false
          type: number
          default: 1
          format: double
          allowEmptyValue: false
        - name: kernel
          in: query
          description: 'The type of kernel to be used (*LINEAR*, *RBF*)'
          required: false
          type: string
          default: RBF
          allowEmptyValue: false
          enum:
            - LINEAR
            - RBF
        - in: body
          name: schema
          description: The pair dataset for training
          required: true
          schema:
            $ref: '#/definitions/OpenReqSchema'
        - name: sigma
          in: query
          description: The value of the *sigma* parameter (only used for RBF)
          required: false
          type: number
          default: 0.01
          format: double
          allowEmptyValue: false
        - name: withLexicalFeatures
          in: query
          description: 'If *true*, lexical features are used'
          required: false
          type: boolean
          default: true
          allowEmptyValue: false
        - name: withSyntacticFeatures
          in: query
          description: 'If *true*, syntactic features are used'
          required: false
          type: boolean
          default: true
          allowEmptyValue: false
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /requirements-similarity/fe-svm/train_and_test:
    post:
      tags:
        - fesvm-controller
      summary: Cross-validation
      description: 'Given a set of duplicate and not-duplicate pairs of requirements, the system runs a *k*-cross-validation and provides the aggregate confusion matrix results.'
      operationId: FESVMTrainAndTestUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: C
          in: query
          description: The value of the *C* parameter
          required: false
          type: number
          default: 1
          format: double
          allowEmptyValue: false
        - name: k
          in: query
          description: The number of folds to split the data for the cross-validation
          required: true
          type: integer
          format: int32
          allowEmptyValue: false
        - name: kernel
          in: query
          description: 'The type of kernel to be used (*LINEAR*, *RBF*)'
          required: false
          type: string
          default: RBF
          allowEmptyValue: false
          enum:
            - LINEAR
            - RBF
        - in: body
          name: schema
          description: The pair dataset for training
          required: true
          schema:
            $ref: '#/definitions/OpenReqSchema'
        - name: sigma
          in: query
          description: The value of the *sigma* parameter (only used for RBF)
          required: false
          type: number
          default: 0.01
          format: double
          allowEmptyValue: false
        - name: withLexicalFeatures
          in: query
          description: 'If *true*, lexical features are used'
          required: false
          type: boolean
          default: true
          allowEmptyValue: false
        - name: withSyntacticFeatures
          in: query
          description: 'If *true*, syntactic features are used'
          required: false
          type: boolean
          default: true
          allowEmptyValue: false
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Stats'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /requirements-similarity/fe-svm/train_and_test_with_optimization:
    post:
      tags:
        - fesvm-controller
      summary: Cross-validation with configuration optimization
      description: 'Given a set of duplicate and not-duplicate pairs of requirements, the system runs a *k*-cross-validation and provides the aggregate confusion matrix results for all possible combinations between the request configuration parameters.'
      operationId: FESVMTrainAndTestWithOptimizationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: C_values
          in: query
          description: The values of the *C* parameter to be tested
          required: false
          type: array
          items:
            type: number
            format: double
          collectionFormat: multi
          allowEmptyValue: false
        - name: k
          in: query
          description: The number of folds to split the data for the cross-validation
          required: true
          type: integer
          format: int32
          allowEmptyValue: false
        - name: kernel
          in: query
          description: 'The type of kernel to be used (*LINEAR*, *RBF*)'
          required: false
          type: string
          default: RBF
          allowEmptyValue: false
          enum:
            - LINEAR
            - RBF
        - in: body
          name: schema
          description: The pair dataset for training
          required: true
          schema:
            $ref: '#/definitions/OpenReqSchema'
        - name: sigma_values
          in: query
          description: The values of the *sigma* parameter to be tested (only used for RBF)
          required: false
          type: array
          items:
            type: number
            format: double
          collectionFormat: multi
          allowEmptyValue: false
        - name: withLexicalFeatures
          in: query
          description: 'If *true*, lexical features are used'
          required: false
          type: boolean
          default: true
          allowEmptyValue: false
        - name: withSyntacticFeatures
          in: query
          description: 'If *true*, syntactic features are used'
          required: false
          type: boolean
          default: true
          allowEmptyValue: false
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/Stats'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /requirements-similarity/requirement:
    get:
      tags:
        - requirement-controller
      summary: Export requirements
      description: Export a set of requirements of the system.
      operationId: getRequirementsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: projects
          in: query
          description: A list of project ids to be exported
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          allowEmptyValue: false
        - name: requirements
          in: query
          description: A list of requirement ids to be exported
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          allowEmptyValue: false
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OpenReqSchema'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - requirement-controller
      summary: Import requirements
      description: 'Import a set of requirements to the system, performs a Basic NLP pipeline preprocess to their natural language data, and store them into the database.'
      operationId: addRequirementsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: openReqSchema
          description: Request body object with the requirements in OpenReq JSON schema format
          required: true
          schema:
            $ref: '#/definitions/OpenReqSchema'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - requirement-controller
      summary: Drops the database
      description: Deletes all existing requirements.
      operationId: dropDatabaseUsingDELETE
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  '/requirements-similarity/requirement/{reqId}':
    get:
      tags:
        - requirement-controller
      summary: Get a requirement
      description: Export a specific requirement of the system.
      operationId: getRequirementUsingGET
      produces:
        - '*/*'
      parameters:
        - name: reqId
          in: path
          description: The requirement id to be exported
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OpenReqSchema'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - requirement-controller
      summary: Delete a requirement
      description: Deletes a specific requirement of the system.
      operationId: deleteRequirementUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: reqId
          in: path
          description: The requirement id to be deleted
          required: true
          type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
definitions:
  OpenReqDependency:
    type: object
    properties:
      dependency_score:
        type: number
        format: double
      dependency_type:
        type: string
        enum:
          - duplicates
      fromid:
        type: string
      status:
        type: string
        enum:
          - proposed
          - accepted
          - rejected
      toid:
        type: string
    title: OpenReqDependency
  OpenReqProject:
    type: object
    properties:
      id:
        type: string
      specifiedRequirements:
        type: array
        items:
          type: string
    title: OpenReqProject
  OpenReqRequirement:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      requirementParts:
        type: array
        items:
          $ref: '#/definitions/OpenReqRequirementPart'
      text:
        type: string
    title: OpenReqRequirement
  OpenReqRequirementPart:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
    title: OpenReqRequirementPart
  OpenReqSchema:
    type: object
    properties:
      dependencies:
        type: array
        items:
          $ref: '#/definitions/OpenReqDependency'
      projects:
        type: array
        items:
          $ref: '#/definitions/OpenReqProject'
      requirements:
        type: array
        items:
          $ref: '#/definitions/OpenReqRequirement'
    title: OpenReqSchema
  Stats:
    type: object
    properties:
      accuracy:
        type: number
        format: double
      fn:
        type: integer
        format: int32
      fp:
        type: integer
        format: int32
      tn:
        type: integer
        format: int32
      tp:
        type: integer
        format: int32
    title: Stats
